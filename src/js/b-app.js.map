{"version":3,"sources":["js/b-app.coffee","js/b-app.js"],"names":[],"mappings":"AAAA;EAAA;;EAAA;;EAWA,wBAAwB,UAAA;ICLpB;MDMF;ICJE;EDGoB,CAAxB,CAAA;;EAIA;IACE;IAAA;MCFI;QDGF;UCDM;QACF;UACE;QACF;MDHoC;IAA5B;ICMZ;MDHF;QCKM;MDLG;ICOP;EDXgB;;EAUpB;ICKI;EDLc;;EAElB,8BAA8B,aAAA;IAC5B;MCOI;QDP8B;MAAV;IAAA;EADI,CAA9B,CAAA;;EAIA;ICWI;MDTA;QCWI;MACF;QACE;MACF;QACE;MACF;IDjBJ;EADkB;;ACsBpB","sourcesContent":["app = angular.module 'BApp', [\n  'B.Chart.Users'\n  'B.Table.Cmds'\n  'B.Table.Pkgs'\n  'B.Map'\n  'B.Delta'\n  'ui.bootstrap' # TODO: use custom build\n  # 'B.Templates'\n]\n\n# TODO swap out w/ api.bower.io endpoint when ready\napp.factory 'bDataSvc', ($http) ->\n  fetchAllP: $http.get \"https://bower-server-etl.herokuapp.com/api/1/data/all\"\n\n# period over period helper funcs\napp.factory 'bPoP', ->\n  _reduceFunc = (period, currentOrPrior) -> (a, b, i) ->\n    if (if currentOrPrior is 'current' then i >= period else i < period) then a + b else a\n\n  process: (data, period) ->\n    [\n      data.reduce _reduceFunc(period, 'prior'), 0\n      data.reduce _reduceFunc(period, 'current'), 0\n    ]\n\napp.factory 'd3', -> d3\n\napp.controller 'BHeaderCtrl', (bDataSvc) ->\n  bDataSvc.fetchAllP.then (data) => @pkgs = data.data.overview.totalPackages; return\n  return\n\napp.filter 'round', ->\n  (input, decimals) ->\n    if !input?\n      undefined\n    else if input >= 1000\n      (input / 1000).toFixed(1) + ' k' # e.g. 206.1 k; toFixed() returns string\n    else input.toFixed decimals\n","(function() {\n  var app;\n\n  app = angular.module('BApp', ['B.Chart.Users', 'B.Table.Cmds', 'B.Table.Pkgs', 'B.Map', 'B.Delta', 'ui.bootstrap']);\n\n  app.factory('bDataSvc', function($http) {\n    return {\n      fetchAllP: $http.get(\"https://bower-server-etl.herokuapp.com/api/1/data/all\")\n    };\n  });\n\n  app.factory('bPoP', function() {\n    var _reduceFunc;\n    _reduceFunc = function(period, currentOrPrior) {\n      return function(a, b, i) {\n        if ((currentOrPrior === 'current' ? i >= period : i < period)) {\n          return a + b;\n        } else {\n          return a;\n        }\n      };\n    };\n    return {\n      process: function(data, period) {\n        return [data.reduce(_reduceFunc(period, 'prior'), 0), data.reduce(_reduceFunc(period, 'current'), 0)];\n      }\n    };\n  });\n\n  app.factory('d3', function() {\n    return d3;\n  });\n\n  app.controller('BHeaderCtrl', function(bDataSvc) {\n    bDataSvc.fetchAllP.then((function(_this) {\n      return function(data) {\n        _this.pkgs = data.data.overview.totalPackages;\n      };\n    })(this));\n  });\n\n  app.filter('round', function() {\n    return function(input, decimals) {\n      if (input == null) {\n        return void 0;\n      } else if (input >= 1000) {\n        return (input / 1000).toFixed(1) + ' k';\n      } else {\n        return input.toFixed(decimals);\n      }\n    };\n  });\n\n}).call(this);\n"],"file":"js/b-app.js","sourceRoot":"/source/"}