{"version":3,"sources":["b-delta/b-delta.coffee","b-delta/b-delta.js"],"names":[],"mappings":"AAAA;EAAA;;EAAA;;EAEA,2BAA2B,aAAA;ICIvB;MDHF;MACA;MACA;QACE;QACA;MCKE;IACF;EDXuB,CAA3B,CAAA;;EAOA;ICQI;MDNA;MAAA;QCSI;MACF;QDPA;QACA;QACA;QAEA;UCQI;QACF;UACE;QACF;MACF;IDpBJ;EADmB;;EAYrB;ICcI;MACE;IDdJ;EADmB;;ACmBrB","sourcesContent":["module = angular.module 'B.Delta', []\n\nmodule.directive \"bDelta\", (bDataSvc) ->\n  templateUrl: 'b-delta/b-delta.html'\n  restrict: 'E'\n  scope:\n    delta: \"@\" # 1-way bind\n    type: \"@\" # num or pct\n\nmodule.filter 'pct', ->\n  (input) ->\n    if !input?\n      undefined\n    else\n      input *= 100\n      inputAbs = Math.abs input\n      inputAbs = if inputAbs < 1 then 1 else inputAbs\n      # neg = if input < 0 then '- ' else '' # force a space b/t sign & num\n      if input is 0 then null\n      else inputAbs.toFixed(0) + '%'\n\nmodule.filter 'abs', ->\n  (input) ->\n    Math.abs input","(function() {\n  var module;\n\n  module = angular.module('B.Delta', []);\n\n  module.directive(\"bDelta\", function(bDataSvc) {\n    return {\n      templateUrl: 'b-delta/b-delta.html',\n      restrict: 'E',\n      scope: {\n        delta: \"@\",\n        type: \"@\"\n      }\n    };\n  });\n\n  module.filter('pct', function() {\n    return function(input) {\n      var inputAbs;\n      if (input == null) {\n        return void 0;\n      } else {\n        input *= 100;\n        inputAbs = Math.abs(input);\n        inputAbs = inputAbs < 1 ? 1 : inputAbs;\n        if (input === 0) {\n          return null;\n        } else {\n          return inputAbs.toFixed(0) + '%';\n        }\n      }\n    };\n  });\n\n  module.filter('abs', function() {\n    return function(input) {\n      return Math.abs(input);\n    };\n  });\n\n}).call(this);\n"],"file":"b-delta/b-delta.js","sourceRoot":"/source/"}